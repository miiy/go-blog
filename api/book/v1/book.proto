syntax="proto3";

option go_package = "goblog.com/api/book";
option java_multiple_files = true;
option java_package = "com.goblog.book";
option java_outer_classname = "BookProto";

package book;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/api/field_behavior.proto";

message Book {
  enum BookStatus {
    DEFAULT = 0;
    ACTIVE = 1;
    DISABLE = 2;
  }
  int64 id = 1;
  int64 user_id = 2;
  int64 category_id = 3;
  string name = 4;
  string publisher = 5;
  int64 year = 6;
  int64 pages = 7;
  float  price = 8;
  string binding = 9;
  string series = 10;
  string isbn = 11;
  string book_description = 12;
  string about_the_author = 13;
  string table_of_contents = 14;
  string content = 15;
  BookStatus status = 16;
  // Output only. Creation time of the book.
  google.protobuf.Timestamp create_time = 17;
  google.protobuf.Timestamp update_time = 18;
  google.protobuf.Timestamp delete_time = 19;
}

// Request to create a new book.
message CreateBookRequest {
  // The parent resource where this book will be created.
  //  // Format: publishers/{publisher}
  string parent = 1;

  // The book to create.
  Book book = 2 [(google.api.field_behavior) = REQUIRED];

  // The ID to use for the book, which will become the final component of
  // the book's resource name.
  //
  // This value should be 4-63 characters, and valid characters
  // are /[a-z][0-9]-/.
  string book_id = 3;
}

// Request to create books in batch.
message BatchCreateBooksRequest {
  map<string, Book> books = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response for creating books in batch.
message BatchCreateBooksResponse {
  repeated Book books = 1;
}

// Request to get a book.
message GetBookRequest {
  int64 id = 1 [(google.api.field_behavior) = REQUIRED];
}

// Request to update a book.
message UpdateBookRequest {
  int64 id = 1 [(google.api.field_behavior) = REQUIRED];

  Book book = 2 [(google.api.field_behavior) = REQUIRED];

  // The list of fields to be updated.
  google.protobuf.FieldMask update_mask = 3;
}

// Request to delete a book.
message DeleteBookRequest {
  int64 id = 1 [(google.api.field_behavior) = REQUIRED];
}

message ListBooksRequest {
  int64 categoryId = 1;
  int64 page = 2;
  int64 page_size = 3;
}

message ListBooksResponse {
  int64 total = 1;
  int64 page_size = 2;
  int64 current_page = 3;
  repeated Book books = 7;
}

message BookMeta {
  int64 book_id = 1;
  string meta_title = 2;
  string meta_description = 3;
  google.protobuf.Timestamp create_at = 4;
  google.protobuf.Timestamp update_at = 5;
  google.protobuf.Timestamp deleted_at = 6;
}

message GetBookMetaRequest {
  int64 id = 1;
}

service BookService {
  rpc CreateBook(CreateBookRequest) returns (Book) {}

  rpc BatchCreateBooks(BatchCreateBooksRequest) returns (BatchCreateBooksResponse) {}

  rpc GetBook(GetBookRequest) returns (Book) {}

  rpc UpdateBook(UpdateBookRequest) returns (Book) {}

  rpc DeleteBook(DeleteBookRequest) returns (google.protobuf.Empty) {}

  rpc ListBooks(ListBooksRequest) returns (ListBooksResponse) {}

  rpc GetBookMeta(GetBookMetaRequest) returns (BookMeta) {}
}